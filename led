#!/bin/bash

[ $# -eq 2 ] || { exit 1; }

signal=$1
port=$2
base=/sys/class/gpio
rules=$(dirname $0)/rules

[ -r "$rules" ] || exit 1


read ppp s0 s1 npins pin[1] pin[2] pin[3] < <(grep "^$port " "$rules" | head -n 1)

[ -n "$ppp" ] || exit 1

if [ $npins -gt 3 ]; then npins=3; fi
for i in $(seq 1 $npins); do
  #echo ${pin[i]}
  if [ ! -d $base/gpio${pin[i]} ]; then
    echo ${pin[i]} > $base/export
    sleep 0.2
    echo out > $base/gpio${pin[i]}/direction
    echo $s0 > $base/gpio${pin[i]}/value
  fi
done

case "$signal" in
  busy)
    case "$npins" in
      1)
        echo $s1 > $base/gpio${pin[1]}/value
        sleep 0.1
        echo $s0 > $base/gpio${pin[1]}/value
        ;;
      2)
        echo $s1 > $base/gpio${pin[1]}/value
        echo $s0 > $base/gpio${pin[2]}/value
        ;;
      3)
        echo $s1 > $base/gpio${pin[1]}/value
        echo $s0 > $base/gpio${pin[2]}/value
        echo $s0 > $base/gpio${pin[3]}/value
        ;;
    esac
    ;;
  free)
    case "$npins" in
      1)
        echo $s0 > $base/gpio${pin[1]}/value
        ;;
      2)
        echo $s0 > $base/gpio${pin[1]}/value
        echo $s0 > $base/gpio${pin[2]}/value
        ;;
      3)
        echo $s0 > $base/gpio${pin[1]}/value
        echo $s0 > $base/gpio${pin[2]}/value
        echo $s0 > $base/gpio${pin[3]}/value
        ;;
    esac
    ;;
  start)
    case "$npins" in
      1)
        for i in 1 2 3
        do
          echo $s1 > $base/gpio${pin[1]}/value
          sleep 0.1
          echo $s0 > $base/gpio${pin[1]}/value
          sleep 0.1
        done
        ;;
      2)
        echo $s0 > $base/gpio${pin[1]}/value
        echo $s1 > $base/gpio${pin[2]}/value
        ;;
      3)
        echo $s0 > $base/gpio${pin[1]}/value
        echo $s1 > $base/gpio${pin[2]}/value
        echo $s0 > $base/gpio${pin[3]}/value
        ;;
    esac
    ;;
  end)
    case "$npins" in
      1)
        echo $s1 > $base/gpio${pin[1]}/value
        ;;
      2)
        echo $s1 > $base/gpio${pin[1]}/value
        echo $s1 > $base/gpio${pin[2]}/value
        ;;
      3)
        echo $s0 > $base/gpio${pin[1]}/value
        echo $s0 > $base/gpio${pin[2]}/value
        echo $s1 > $base/gpio${pin[3]}/value
        ;;
    esac
    ;;
  blink)
    for i in $(seq 1 $npins)
    do
      value[$i]=$(cat $base/gpio${pin[$i]}/value)
    done
    while true
    do
      sleep 2
      for i in $(seq 1 $npins)
      do
        [ ${value[$i]} -eq 1 ]; echo $? > $base/gpio${pin[$i]}/value
      done
      sleep 0.1
      for i in $(seq 1 $npins)
      do
        echo ${value[$i]} > $base/gpio${pin[$i]}/value
      done
    done
    ;;
  error)
    for i in $(seq 1 $npins)
    do
      value[$i]=$(cat $base/gpio${pin[$i]}/value)
    done
    while true
    do
      sleep 0.5
      for i in $(seq 1 $npins)
      do
        [ ${value[$i]} -eq 1 ]; echo $? > $base/gpio${pin[$i]}/value
      done
      sleep 0.5
      for i in $(seq 1 $npins)
      do
        echo ${value[$i]} > $base/gpio${pin[$i]}/value
      done
    done
    ;;
esac
